{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\medis\\\\OneDrive\\\\Desktop\\\\CICD_Project\\\\CICD-FreshCart\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check for existing user session in localStorage\n    const savedUser = localStorage.getItem('freshcart_user');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Simulate API call\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n        localStorage.setItem('freshcart_user', JSON.stringify(userData));\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Invalid credentials'\n        };\n      }\n    } catch (error) {\n      // For demo purposes, simulate successful login\n      const demoUser = {\n        id: 1,\n        name: 'Demo User',\n        email: email,\n        avatar: 'https://via.placeholder.com/150'\n      };\n      setUser(demoUser);\n      localStorage.setItem('freshcart_user', JSON.stringify(demoUser));\n      return {\n        success: true\n      };\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      // Simulate API call\n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n        localStorage.setItem('freshcart_user', JSON.stringify(userData));\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Email already exists'\n        };\n      }\n    } catch (error) {\n      // For demo purposes, simulate successful register\n      const demoUser = {\n        id: 1,\n        name: name,\n        email: email,\n        avatar: 'https://via.placeholder.com/150'\n      };\n      setUser(demoUser);\n      localStorage.setItem('freshcart_user', JSON.stringify(demoUser));\n      return {\n        success: true\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('freshcart_user');\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","login","email","password","response","fetch","method","headers","body","stringify","ok","userData","json","setItem","success","error","demoUser","id","name","avatar","register","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/medis/OneDrive/Desktop/CICD_Project/CICD-FreshCart/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\n\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for existing user session in localStorage\r\n    const savedUser = localStorage.getItem('freshcart_user');\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Simulate API call\r\n      const response = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n        localStorage.setItem('freshcart_user', JSON.stringify(userData));\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: 'Invalid credentials' };\r\n      }\r\n    } catch (error) {\r\n      // For demo purposes, simulate successful login\r\n      const demoUser = {\r\n        id: 1,\r\n        name: 'Demo User',\r\n        email: email,\r\n        avatar: 'https://via.placeholder.com/150'\r\n      };\r\n      setUser(demoUser);\r\n      localStorage.setItem('freshcart_user', JSON.stringify(demoUser));\r\n      return { success: true };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      // Simulate API call\r\n      const response = await fetch('/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n        localStorage.setItem('freshcart_user', JSON.stringify(userData));\r\n        return { success: true };\r\n      } else {\r\n        return { success: false, error: 'Email already exists' };\r\n      }\r\n    } catch (error) {\r\n      // For demo purposes, simulate successful register\r\n      const demoUser = {\r\n        id: 1,\r\n        name: name,\r\n        email: email,\r\n        avatar: 'https://via.placeholder.com/150'\r\n      };\r\n      setUser(demoUser);\r\n      localStorage.setItem('freshcart_user', JSON.stringify(demoUser));\r\n      return { success: true };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('freshcart_user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}